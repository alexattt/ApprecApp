// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MsgDeliveryFailReporting.Database;

#nullable disable

namespace MsgDeliveryFailReporting.Migrations
{
    [DbContext(typeof(AppRecDbContext))]
    partial class AppRecDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MsgDeliveryFailReporting.Database.Models.AppRec", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("GenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MIGversion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MsgTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReceiverID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenderId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoftwareName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MsgTypeId");

                    b.HasIndex("ReceiverID");

                    b.HasIndex("SenderId");

                    b.HasIndex("StatusId");

                    b.ToTable("AppRecs");
                });

            modelBuilder.Entity("MsgDeliveryFailReporting.Database.Models.Error", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppRecId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Err_DN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Err_OT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Err_S")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Err_V")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppRecId");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("MsgDeliveryFailReporting.Database.Models.MessageType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MessageTypes");
                });

            modelBuilder.Entity("MsgDeliveryFailReporting.Database.Models.Receiver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReceiverId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Receivers");
                });

            modelBuilder.Entity("MsgDeliveryFailReporting.Database.Models.Sender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SenderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Senders");
                });

            modelBuilder.Entity("MsgDeliveryFailReporting.Database.Models.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status_DN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status_V")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("MsgDeliveryFailReporting.Database.Models.AppRec", b =>
                {
                    b.HasOne("MsgDeliveryFailReporting.Database.Models.MessageType", "MsgType")
                        .WithMany()
                        .HasForeignKey("MsgTypeId");

                    b.HasOne("MsgDeliveryFailReporting.Database.Models.Receiver", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsgDeliveryFailReporting.Database.Models.Sender", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsgDeliveryFailReporting.Database.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("MsgType");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MsgDeliveryFailReporting.Database.Models.Error", b =>
                {
                    b.HasOne("MsgDeliveryFailReporting.Database.Models.AppRec", "AppRec")
                        .WithMany("Errors")
                        .HasForeignKey("AppRecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRec");
                });

            modelBuilder.Entity("MsgDeliveryFailReporting.Database.Models.AppRec", b =>
                {
                    b.Navigation("Errors");
                });
#pragma warning restore 612, 618
        }
    }
}
